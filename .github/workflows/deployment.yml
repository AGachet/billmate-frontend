name: Deployment

on:
  push:
    branches: [master]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (e.g., 1.0.0)'
        required: true
        type: string
        default: 'latest'
  repository_dispatch:
    types:
      - deployment

jobs:
  check-tests:
    name: Check if tests passed
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Check test status
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            # Check if tests have passed for this specific commit
            gh run list --workflow=test.yml --branch=master --status=success --limit=1 --commit=${{ github.sha }}
            if [ $? -ne 0 ]; then
              echo "Tests have not passed for commit ${{ github.sha }}. Deployment blocked."
              exit 1
            fi
          fi

      - name: Print last failed test run
        if: failure()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Last 5 test runs:"
          gh run list --workflow=test.yml --limit=5
          echo "Detailed logs of the last failed run:"
          LAST_FAILED_RUN=$(gh run list --workflow=test.yml --status=failure --limit=1 --json databaseId --jq '.[0].databaseId')
          if [ ! -z "$LAST_FAILED_RUN" ]; then
            gh run view $LAST_FAILED_RUN --log
          fi

  docker-push:
    name: Push Docker image to GHCR
    needs: [check-tests]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Get package version
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ github.event.inputs.version || steps.package-version.outputs.version }}
            type=raw,value=latest
            type=sha,format=long

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
